import{jsx as t,jsxs as r,Fragment as e}from"react/jsx-runtime";import{serve as o}from"https://deno.land/std@0.164.0/http/server.ts";import{createServer as n}from"ultra/server.ts";import a from"./src/app.tsx";import{createHeadInsertionTransformStream as m}from"ultra/stream.ts";import{stringify as i,tw as s}from"./src/twind/twind.ts";import{StaticRouter as p}from"react-router-dom/server";import{HelmetProvider as c}from"react-helmet-async";import l from"ultra/hooks/use-server-inserted-html.js";import{QueryClientProvider as u}from"@tanstack/react-query";import{useDehydrateReactQuery as f}from"./src/react-query/useDehydrateReactQuery.tsx";import{queryClient as h}from"./src/react-query/query-client.ts";let d=await n({importMapPath:import.meta.resolve("./importMap.json"),browserEntrypoint:import.meta.resolve("./client.tsx")}),y={};function x({context:o}){return l(()=>{let{helmet:t}=y;return r(e,{children:[t.title.toComponent(),t.priority.toComponent(),t.meta.toComponent(),t.link.toComponent(),t.script.toComponent()]})}),f(h),new URL(o.req.url),t(c,{context:y,children:t(u,{client:h,children:t(p,{location:new URL(o.req.url).pathname,children:t(a,{})})})})}d.get("*",async r=>{h.clear();let e=await d.render(t(x,{context:r})),o=m(()=>{if(Array.isArray(s.target))return Promise.resolve(i(s.target));throw Error("Expected tw.target to be an instance of an Array")});return e=e.pipeThrough(o),r.body(e,200,{"content-type":"text/html; charset=utf-8"})}),import.meta.main&&o(d.fetch);export default d;